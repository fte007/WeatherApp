{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\React\\\\react-advanced-2020\\\\src\\\\practice\\\\weather\\\\WeatherApp.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nconst API = {\n  key: \"8d8a7e300ffe83bbdd8278f8c4cf4ad0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nconst TEMP_THRESHOLD = 20;\n\nfunction WeatherApp() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [bgImage, setBgImage] = useState([]);\n\n  function setImage(img) {\n    setBgImage(img);\n  }\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const search = e => {\n    if (e.key === \"Enter\") {\n      fetch(`${API.base}weather?q=${query}&lang=vi&units=metric&APPID=${API.key}`).then(res => res.json()).then(re => {\n        if (re.main) {\n          setWeather(re);\n          setBgImage(re.weather[0].main);\n        } else {\n          alert(\"Không tìm thấy địa điểm, vui lòng nhập lại\");\n        }\n\n        setQuery(\"\");\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"Tháng một\", \"Tháng hai\", \"Tháng ba\", \"Tháng tư\", \"Tháng năm\", \"Tháng sáu\", \"Tháng bảy\", \"Tháng tám\", \"Tháng chín\", \"Tháng mười\", \"Tháng mười một\", \"Tháng mười hai\"];\n    let days = [\"Chủ nhật\", \"Thứ hai\", \"Thứ ba\", \"Thứ tư\", \"Thứ năm\", \"Thứ sáu\", \"Thứ bảy\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day}, ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `app ${bgImage}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Nh\\u1EADp \\u0111\\u1ECBa \\u0111i\\u1EC3m...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, weather.name, \",\", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, Math.round(weather.main.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, capitalizeFirstLetter(weather.weather[0].description)))) : \"\" // <div className=\"weather-box\">\n  //   <div className=\"weather\">Nhập địa điểm</div>\n  // </div>\n  )));\n}\n\nexport default WeatherApp;","map":{"version":3,"sources":["D:/Documents/React/react-advanced-2020/src/practice/weather/WeatherApp.js"],"names":["React","useState","useEffect","API","key","base","TEMP_THRESHOLD","WeatherApp","query","setQuery","weather","setWeather","bgImage","setBgImage","setImage","img","capitalizeFirstLetter","string","charAt","toUpperCase","slice","search","e","fetch","then","res","json","re","main","alert","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","target","value","name","sys","country","Date","Math","round","temp","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;AAKA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASa,QAAT,CAAkBC,GAAlB,EAAuB;AACrBF,IAAAA,UAAU,CAACE,GAAD,CAAV;AACD;;AAED,WAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AACrC,WAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACD;;AAED,QAAMC,MAAM,GAAIC,CAAD,IAAO;AACpB,QAAIA,CAAC,CAAClB,GAAF,KAAU,OAAd,EAAuB;AACrBmB,MAAAA,KAAK,CACF,GAAEpB,GAAG,CAACE,IAAK,aAAYG,KAAM,+BAA8BL,GAAG,CAACC,GAAI,EADjE,CAAL,CAGGoB,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,EAAD,IAAQ;AACZ,YAAIA,EAAE,CAACC,IAAP,EAAa;AACXjB,UAAAA,UAAU,CAACgB,EAAD,CAAV;AACAd,UAAAA,UAAU,CAACc,EAAE,CAACjB,OAAH,CAAW,CAAX,EAAckB,IAAf,CAAV;AACD,SAHD,MAGO;AACLC,UAAAA,KAAK,CAAC,4CAAD,CAAL;AACD;;AACDpB,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,OAZH;AAaD;AACF,GAhBD;;AAkBA,QAAMqB,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,MAAM,GAAG,CACX,WADW,EAEX,WAFW,EAGX,UAHW,EAIX,UAJW,EAKX,WALW,EAMX,WANW,EAOX,WAPW,EAQX,WARW,EASX,YATW,EAUX,YAVW,EAWX,gBAXW,EAYX,gBAZW,CAAb;AAcA,QAAIC,IAAI,GAAG,CACT,UADS,EAET,SAFS,EAGT,QAHS,EAIT,QAJS,EAKT,SALS,EAMT,SANS,EAOT,SAPS,CAAX;AAUA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEA,WAAQ,GAAEP,GAAI,KAAIE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAxC;AACD,GA/BD;;AAiCA,sBACE;AAAK,IAAA,SAAS,EAAG,OAAM5B,OAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,WAAW,EAAC,2CAHd;AAIE,IAAA,QAAQ,EAAGU,CAAD,IAAOb,QAAQ,CAACa,CAAC,CAACoB,MAAF,CAASC,KAAV,CAJ3B;AAKE,IAAA,KAAK,EAAEnC,KALT;AAME,IAAA,UAAU,EAAEa,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,OAAOX,OAAO,CAACkB,IAAf,IAAuB,WAAvB,gBACC,uDACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,OAAO,CAACkC,IADX,OACkBlC,OAAO,CAACmC,GAAR,CAAYC,OAD9B,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBhB,WAAW,CAAC,IAAIiB,IAAJ,EAAD,CAAlC,CAJF,CADF,eAOE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,IAAI,CAACC,KAAL,CAAWvC,OAAO,CAACkB,IAAR,CAAasB,IAAxB,CAAvB,UADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlC,qBAAqB,CAACN,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmByC,WAApB,CADxB,CAFF,CAPF,CADD,GAgBC,EAhBD,CAiBC;AACA;AACA;AApBJ,GAdF,CADF,CADF;AA0CD;;AAED,eAAe5C,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst API = {\r\n  key: \"8d8a7e300ffe83bbdd8278f8c4cf4ad0\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nconst TEMP_THRESHOLD = 20;\r\n\r\nfunction WeatherApp() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n  const [bgImage, setBgImage] = useState([]);\r\n\r\n  function setImage(img) {\r\n    setBgImage(img);\r\n  }\r\n\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  const search = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      fetch(\r\n        `${API.base}weather?q=${query}&lang=vi&units=metric&APPID=${API.key}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((re) => {\r\n          if (re.main) {\r\n            setWeather(re);\r\n            setBgImage(re.weather[0].main);\r\n          } else {\r\n            alert(\"Không tìm thấy địa điểm, vui lòng nhập lại\");\r\n          }\r\n          setQuery(\"\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"Tháng một\",\r\n      \"Tháng hai\",\r\n      \"Tháng ba\",\r\n      \"Tháng tư\",\r\n      \"Tháng năm\",\r\n      \"Tháng sáu\",\r\n      \"Tháng bảy\",\r\n      \"Tháng tám\",\r\n      \"Tháng chín\",\r\n      \"Tháng mười\",\r\n      \"Tháng mười một\",\r\n      \"Tháng mười hai\",\r\n    ];\r\n    let days = [\r\n      \"Chủ nhật\",\r\n      \"Thứ hai\",\r\n      \"Thứ ba\",\r\n      \"Thứ tư\",\r\n      \"Thứ năm\",\r\n      \"Thứ sáu\",\r\n      \"Thứ bảy\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day}, ${date} ${month} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${bgImage}`}>\r\n      <main>\r\n        <div className=\"container\">\r\n          <div className=\"search-box\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Nhập địa điểm...\"\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              value={query}\r\n              onKeyPress={search}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          {typeof weather.main != \"undefined\" ? (\r\n            <>\r\n              <div className=\"location-box\">\r\n                <div className=\"location\">\r\n                  {weather.name},{weather.sys.country}\r\n                </div>\r\n                <div className=\"date\">{dateBuilder(new Date())}</div>\r\n              </div>\r\n              <div className=\"weather-box\">\r\n                <div className=\"temp\">{Math.round(weather.main.temp)}°C</div>\r\n                <div className=\"weather\">\r\n                  {capitalizeFirstLetter(weather.weather[0].description)}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n            // <div className=\"weather-box\">\r\n            //   <div className=\"weather\">Nhập địa điểm</div>\r\n            // </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherApp;\r\n"]},"metadata":{},"sourceType":"module"}