{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\React\\\\react-advanced-2020\\\\src\\\\practice\\\\weather\\\\WeatherApp.js\";\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nconst api = {\n  key: \"8d8a7e300ffe83bbdd8278f8c4cf4ad0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction WeatherApp() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = e => {\n    if (e.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(re => {\n        setQuery(\"\");\n        setWeather(re);\n        console.log(re);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"Tháng một\", \"Tháng hai\", \"Tháng ba\", \"Tháng tư\", \"Tháng năm\", \"Tháng sáu\", \"Tháng bảy\", \"Tháng tám\", \"Tháng chín\", \"Tháng mười\", \"Tháng mười một\", \"Tháng mười hai\"];\n    let days = [\"Chủ nhật\", \"Thứ hai\", \"Thứ ba\", \"Thứ tư\", \"Thứ năm\", \"Thứ sáu\", \"Thứ bảy\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day}, ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"T\\xECm ki\\u1EBFm...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"New York City, US\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"15\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Sunny\"))) : \"\")));\n}\n\nexport default WeatherApp;","map":{"version":3,"sources":["D:/Documents/React/react-advanced-2020/src/practice/weather/WeatherApp.js"],"names":["React","useState","api","key","base","WeatherApp","query","setQuery","weather","setWeather","search","e","fetch","then","res","json","re","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","target","value","main","Date"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst api = {\r\n  key: \"8d8a7e300ffe83bbdd8278f8c4cf4ad0\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nfunction WeatherApp() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then((res) => res.json())\r\n        .then((re) => {\r\n          setQuery(\"\");\r\n          setWeather(re);\r\n          console.log(re);\r\n        });\r\n    }\r\n  };\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"Tháng một\",\r\n      \"Tháng hai\",\r\n      \"Tháng ba\",\r\n      \"Tháng tư\",\r\n      \"Tháng năm\",\r\n      \"Tháng sáu\",\r\n      \"Tháng bảy\",\r\n      \"Tháng tám\",\r\n      \"Tháng chín\",\r\n      \"Tháng mười\",\r\n      \"Tháng mười một\",\r\n      \"Tháng mười hai\",\r\n    ];\r\n    let days = [\r\n      \"Chủ nhật\",\r\n      \"Thứ hai\",\r\n      \"Thứ ba\",\r\n      \"Thứ tư\",\r\n      \"Thứ năm\",\r\n      \"Thứ sáu\",\r\n      \"Thứ bảy\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day}, ${date} ${month} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <main>\r\n        <div className=\"container\">\r\n          <div className=\"search-box\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Tìm kiếm...\"\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              value={query}\r\n              onKeyPress={search}\r\n            />\r\n          </div>\r\n\r\n          {typeof weather.main != \"undefined\" ? (\r\n            <>\r\n              <div className=\"location-box\">\r\n                <div className=\"location\">New York City, US</div>\r\n                <div className=\"date\">{dateBuilder(new Date())}</div>\r\n              </div>\r\n              <div className=\"weather-box\">\r\n                <div className=\"temp\">15°C</div>\r\n                <div className=\"weather\">Sunny</div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherApp;\r\n"]},"metadata":{},"sourceType":"module"}