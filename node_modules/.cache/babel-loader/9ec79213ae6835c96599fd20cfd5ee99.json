{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\React\\\\react-advanced-2020\\\\src\\\\practice\\\\todo\\\\todoApp.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./todoList\";\nconst LOCAL_KEY = \"todoApp.todos\";\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(LOCAL_KEY));\n    setTodos(stored);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id == id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos(prevTodo => {\n      return [...prevTodo, {\n        id: new Date().getTime(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleComplete() {\n    const newTodo = todos.filter(todo => !todo.complete);\n    setTodos(newTodo);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    toggleTodo: toggleTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: todoNameRef,\n    type: \"text\",\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleAddTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Add todo\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Clear completed todos\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, todos.filter(todo => !todo.complete).length, \" Todo left\"));\n};\n\nexport default Todo;","map":{"version":3,"sources":["D:/Documents/React/react-advanced-2020/src/practice/todo/todoApp.js"],"names":["React","useState","useRef","useEffect","TodoList","LOCAL_KEY","Todo","todos","setTodos","todoNameRef","stored","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","id","newTodos","todo","find","complete","handleAddTodo","e","name","current","value","prevTodo","Date","getTime","handleComplete","newTodo","filter","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,SAAS,GAAG,eAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMQ,WAAW,GAAGP,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,SAArB,CAAX,CAAf;AACAG,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACE,OAAb,CAAqBV,SAArB,EAAgCM,IAAI,CAACK,SAAL,CAAeT,KAAf,CAAhC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASU,UAAT,CAAoBC,EAApB,EAAwB;AACtB,UAAMC,QAAQ,GAAG,CAAC,GAAGZ,KAAJ,CAAjB;AACA,UAAMa,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAeD,IAAD,IAAUA,IAAI,CAACF,EAAL,IAAWA,EAAnC,CAAb;AACAE,IAAAA,IAAI,CAACE,QAAL,GAAgB,CAACF,IAAI,CAACE,QAAtB;AACAd,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACD;;AAED,WAASI,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGhB,WAAW,CAACiB,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBjB,IAAAA,QAAQ,CAAEoB,QAAD,IAAc;AACrB,aAAO,CACL,GAAGA,QADE,EAEL;AAAEV,QAAAA,EAAE,EAAE,IAAIW,IAAJ,GAAWC,OAAX,EAAN;AAA4BL,QAAAA,IAAI,EAAEA,IAAlC;AAAwCH,QAAAA,QAAQ,EAAE;AAAlD,OAFK,CAAP;AAID,KALO,CAAR;AAMAb,IAAAA,WAAW,CAACiB,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AAED,WAASI,cAAT,GAA0B;AACxB,UAAMC,OAAO,GAAGzB,KAAK,CAAC0B,MAAN,CAAcb,IAAD,IAAU,CAACA,IAAI,CAACE,QAA7B,CAAhB;AACAd,IAAAA,QAAQ,CAACwB,OAAD,CAAR;AACD;;AAED,sBACE,uDACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEzB,KAAjB;AAAwB,IAAA,UAAU,EAAEU,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,GAAG,EAAER,WAAZ;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,SAAS,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAEc,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAEQ,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMxB,KAAK,CAAC0B,MAAN,CAAcb,IAAD,IAAU,CAACA,IAAI,CAACE,QAA7B,EAAuCY,MAA7C,eATF,CADF;AAaD,CAlDD;;AAoDA,eAAe5B,IAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport TodoList from \"./todoList\";\r\n\r\nconst LOCAL_KEY = \"todoApp.todos\";\r\n\r\nconst Todo = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const todoNameRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const stored = JSON.parse(localStorage.getItem(LOCAL_KEY));\r\n    setTodos(stored);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_KEY, JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  function toggleTodo(id) {\r\n    const newTodos = [...todos];\r\n    const todo = newTodos.find((todo) => todo.id == id);\r\n    todo.complete = !todo.complete;\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  function handleAddTodo(e) {\r\n    const name = todoNameRef.current.value;\r\n    if (name === \"\") return;\r\n    setTodos((prevTodo) => {\r\n      return [\r\n        ...prevTodo,\r\n        { id: new Date().getTime(), name: name, complete: false },\r\n      ];\r\n    });\r\n    todoNameRef.current.value = null;\r\n  }\r\n\r\n  function handleComplete() {\r\n    const newTodo = todos.filter((todo) => !todo.complete);\r\n    setTodos(newTodo);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\r\n      <input ref={todoNameRef} type=\"text\" className=\"input\" />\r\n      <button className=\"btn\" onClick={handleAddTodo}>\r\n        Add todo\r\n      </button>\r\n      <button className=\"btn\" onClick={handleComplete}>\r\n        Clear completed todos\r\n      </button>\r\n      <div>{todos.filter((todo) => !todo.complete).length} Todo left</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}