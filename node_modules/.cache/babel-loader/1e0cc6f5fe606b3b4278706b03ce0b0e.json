{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\React\\\\react-advanced-2020\\\\src\\\\practice\\\\todo\\\\todoApp.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./todoList\";\nconst LOCAL_KEY = \"todoApp.todos\";\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(LOCAL_KEY));\n    setTodos(stored);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos(prevTodo => {\n      return [...prevTodo, {\n        id: new Date().getTime(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: todoNameRef,\n    type: \"text\",\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleAddTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Add todo\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Clear completed todos\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"0 Todo left\"));\n};\n\nexport default Todo;","map":{"version":3,"sources":["D:/Documents/React/react-advanced-2020/src/practice/todo/todoApp.js"],"names":["React","useState","useRef","useEffect","TodoList","LOCAL_KEY","Todo","todos","setTodos","todoNameRef","stored","JSON","parse","localStorage","getItem","setItem","stringify","handleAddTodo","e","name","current","value","prevTodo","id","Date","getTime","complete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,SAAS,GAAG,eAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMQ,WAAW,GAAGP,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,SAArB,CAAX,CAAf;AACAG,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACE,OAAb,CAAqBV,SAArB,EAAgCM,IAAI,CAACK,SAAL,CAAeT,KAAf,CAAhC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAGA,WAASU,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGV,WAAW,CAACW,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBX,IAAAA,QAAQ,CAAEc,QAAD,IAAc;AACrB,aAAO,CACL,GAAGA,QADE,EAEL;AAAEC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAAN;AAA4BN,QAAAA,IAAI,EAAEA,IAAlC;AAAwCO,QAAAA,QAAQ,EAAE;AAAlD,OAFK,CAAP;AAID,KALO,CAAR;AAMAjB,IAAAA,WAAW,CAACW,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AACD,sBACE,uDACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEd,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,GAAG,EAAEE,WAAZ;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,SAAS,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAEQ,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CADF;AAWD,CAlCD;;AAoCA,eAAeX,IAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport TodoList from \"./todoList\";\r\n\r\nconst LOCAL_KEY = \"todoApp.todos\";\r\n\r\nconst Todo = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const todoNameRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const stored = JSON.parse(localStorage.getItem(LOCAL_KEY));\r\n    setTodos(stored);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_KEY, JSON.stringify(todos));\r\n  }, [todos]);\r\n  function handleAddTodo(e) {\r\n    const name = todoNameRef.current.value;\r\n    if (name === \"\") return;\r\n    setTodos((prevTodo) => {\r\n      return [\r\n        ...prevTodo,\r\n        { id: new Date().getTime(), name: name, complete: false },\r\n      ];\r\n    });\r\n    todoNameRef.current.value = null;\r\n  }\r\n  return (\r\n    <>\r\n      <TodoList todos={todos} />\r\n      <input ref={todoNameRef} type=\"text\" className=\"input\" />\r\n      <button className=\"btn\" onClick={handleAddTodo}>\r\n        Add todo\r\n      </button>\r\n      <button className=\"btn\">Clear completed todos</button>\r\n      <div>0 Todo left</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}