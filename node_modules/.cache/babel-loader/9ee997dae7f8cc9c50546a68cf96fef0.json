{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\React\\\\react-advanced-2020\\\\src\\\\practice\\\\todo\\\\todoApp.js\";\nimport React, { useState, useRef } from \"react\";\nimport TodoList from \"./todoList\";\nimport uuidv4 from \"uuid/v4\";\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos(prevTodo => {\n      return [...prevTodo, {\n        id: uuidv4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: todoNameRef,\n    type: \"text\",\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleAddTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Add todo\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Clear completed todos\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"0 Todo left\"));\n};\n\nexport default Todo;","map":{"version":3,"sources":["D:/Documents/React/react-advanced-2020/src/practice/todo/todoApp.js"],"names":["React","useState","useRef","TodoList","uuidv4","Todo","todos","setTodos","todoNameRef","handleAddTodo","e","name","current","value","prevTodo","id","complete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,WAAW,GAAGN,MAAM,EAA1B;;AACA,WAASO,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBJ,IAAAA,QAAQ,CAAEO,QAAD,IAAc;AACrB,aAAO,CAAC,GAAGA,QAAJ,EAAc;AAAEC,QAAAA,EAAE,EAAEX,MAAM,EAAZ;AAAgBO,QAAAA,IAAI,EAAEA,IAAtB;AAA4BK,QAAAA,QAAQ,EAAE;AAAtC,OAAd,CAAP;AACD,KAFO,CAAR;AAGAR,IAAAA,WAAW,CAACI,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AACD,sBACE,uDACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,GAAG,EAAEE,WAAZ;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,SAAS,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAEC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CADF;AAWD,CAtBD;;AAwBA,eAAeJ,IAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport TodoList from \"./todoList\";\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nconst Todo = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const todoNameRef = useRef();\r\n  function handleAddTodo(e) {\r\n    const name = todoNameRef.current.value;\r\n    if (name === \"\") return;\r\n    setTodos((prevTodo) => {\r\n      return [...prevTodo, { id: uuidv4(), name: name, complete: false }];\r\n    });\r\n    todoNameRef.current.value = null;\r\n  }\r\n  return (\r\n    <>\r\n      <TodoList todos={todos} />\r\n      <input ref={todoNameRef} type=\"text\" className=\"input\" />\r\n      <button className=\"btn\" onClick={handleAddTodo}>\r\n        Add todo\r\n      </button>\r\n      <button className=\"btn\">Clear completed todos</button>\r\n      <div>0 Todo left</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}